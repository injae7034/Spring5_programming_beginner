/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.0.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'

    // Spring
    id 'org.springframework.boot' version '2.3.5.RELEASE'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter API for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.1'

    // Use JUnit Jupiter Engine for testing.
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:30.0-jre'

    // Spring Context
    implementation 'org.springframework:spring-context:5.0.2.RELEASE'

    // Spring JDBC
    implementation 'org.springframework:spring-jdbc:5.0.2.RELEASE'

    // Tomcat JDBC
    implementation 'org.apache.tomcat:tomcat-jdbc:8.5.27'

    // SpringBootStarter
    implementation 'org.springframework.boot:spring-boot-starter'

    // MySQL connector
    runtimeOnly 'mysql:mysql-connector-java'
}

application {
    // Define the main class for the application.
    mainClass = 'spring.App'
}

tasks.named('test') {
    // Use junit platform for unit tests.
    useJUnitPlatform()
}
